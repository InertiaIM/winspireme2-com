imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: "%kernel.debug%"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:
        name: winspire

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
        lessphp:
            file: %kernel.root_dir%/../vendor/leafo/lessphp/lessc.inc.php
            apply_to: "\.less$"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    StofDoctrineExtensionsBundle: ~
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        is_bundle: false

# Swiftmailer Configuration
swiftmailer:
    transport:  sendmail
    host:       "%mailer_host%"
    username:   "%mailer_user%"
    password:   "%mailer_password%"
#    spool:      { type: memory }
    logging:    true

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Inertia\WinspireBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    resetting:
        email:
            template: InertiaWinspireBundle:Email:password-reset-link.html.twig
            from_email:
                address:        notice@winspireme.com
                sender_name:    Winspire

stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            tree: true

ddeboer_salesforce_client:
    username: confirmation@winspireme.com
    password: bx1DN
    token: JiUNxFoGa9kTQCuinAwd3OM6a
    wsdl: "%kernel.root_dir%/config/enterprise.wsdl.xml"
    logging: false

# not sure why this is necessary
be_simple_soap:
    clients:
        force_this_to_work:
            wsdl: blah

services:
    package_soap_service:
        class: Inertia\WinspireBundle\Services\PackageSoapService
        arguments: [@ddeboer_salesforce_client, @doctrine.orm.entity_manager, @logger]
    
    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
            
    comment_service:
        class: Inertia\WinspireBundle\Consumer\CommentConsumer
        arguments: [@doctrine.orm.entity_manager, @mailer, @templating]
        
    contact_service:
        class: Inertia\WinspireBundle\Consumer\ContactConsumer
        arguments: [@doctrine.orm.entity_manager, @mailer, @templating]
        
    pack_suitcase_service:
        class: Inertia\WinspireBundle\Consumer\PackSuitcaseConsumer
        arguments: [@doctrine.orm.entity_manager, @mailer, @templating]
        
    create_suitcase_service:
        class: Inertia\WinspireBundle\Consumer\CreateSuitcaseConsumer
        arguments: [@doctrine.orm.entity_manager, @mailer, @templating]
        
    unpack_suitcase_service:
        class: Inertia\WinspireBundle\Consumer\UnpackSuitcaseConsumer
        arguments: [@doctrine.orm.entity_manager, @mailer, @templating]
        
    share_suitcase_service:
        class: Inertia\WinspireBundle\Consumer\ShareSuitcaseConsumer
        arguments: [@doctrine.orm.entity_manager, @mailer, @templating]

old_sound_rabbit_mq:
    connections:
        default:
            host:      localhost
            port:      5672
            user:      winspire
            password:  qubaouew1024
            vhost:     /
    producers:
        winspire:
            connection: default
            exchange_options: { name: 'winspire', type: direct }
    consumers:
        comment:
            connection: default
            exchange_options: { name: 'winspire', type: direct }
            queue_options:    { name: 'winspire-comment' }
            callback:         comment_service
        contact:
            connection: default
            exchange_options: { name: 'winspire', type: direct }
            queue_options:    { name: 'winspire-contact' }
            callback:         contact_service
        pack_suitcase:
            connection: default
            exchange_options: { name: 'winspire', type: direct }
            queue_options:    { name: 'winspire-pack-suitcase' }
            callback:         pack_suitcase_service
        create_suitcase:
            connection: default
            exchange_options: { name: 'winspire', type: direct }
            queue_options:    { name: 'winspire-create-suitcase' }
            callback:         create_suitcase_service
        unpack_suitcase:
            connection: default
            exchange_options: { name: 'winspire', type: direct }
            queue_options:    { name: 'winspire-unpack-suitcase' }
            callback:         unpack_suitcase_service
        share_suitcase:
            connection: default
            exchange_options: { name: 'winspire', type: direct }
            queue_options:    { name: 'winspire-share-suitcase' }
            callback:         share_suitcase_service